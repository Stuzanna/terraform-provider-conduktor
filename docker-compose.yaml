services:
  postgresql:
    image: postgres:14
    hostname: postgresql
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "conduktor-console"
      POSTGRES_USER: "conduktor"
      POSTGRES_PASSWORD: "change_me"
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-U",
          "conduktor",
          "-d",
          "conduktor-console",
          "-h",
          "localhost",
          "-p",
          "5432",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  conduktor-console:
    image: ${CONDUKTOR_CONSOLE_IMAGE}
    depends_on:
      postgresql:
        condition: service_healthy
      conduktor-monitoring:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - conduktor_data:/var/conduktor
    environment:
      - CDK_LICENSE # forward from the environment if set
      - CDK_DEBUG # forward from the environment if set
      - CDK_ADMIN_EMAIL=${CDK_ADMIN_EMAIL:-admin@conduktor.io}
      - CDK_ADMIN_PASSWORD=${CDK_ADMIN_PASSWORD:-test}
      - CDK_DATABASE_URL=postgresql://conduktor:change_me@postgresql:5432/conduktor-console
      - CDK_MONITORING_CORTEX-URL=http://conduktor-monitoring:9009/
      - CDK_MONITORING_ALERT-MANAGER-URL=http://conduktor-monitoring:9010/
      - CDK_MONITORING_CALLBACK-URL=http://conduktor-platform:8080/monitoring/api/
      - CDK_MONITORING_NOTIFICATIONS-CALLBACK-URL=http://localhost:8080
    healthcheck:
      test: ["CMD", "/opt/conduktor/scripts/healthcheck.sh"]

  conduktor-monitoring:
    image: ${CONDUKTOR_CONSOLE_CORTEX_IMAGE}
    environment:
      CDK_CONSOLE-URL: "http://conduktor-console:8080"
    healthcheck:
      test: ["CMD", "/opt/conduktor/scripts/healthcheck.sh"]

volumes:
  pg_data: {}
  conduktor_data: {}
