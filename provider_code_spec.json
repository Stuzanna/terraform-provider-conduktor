{
  "provider": {
    "name": "conduktor",
    "schema": {
      "attributes": [
        {
          "name": "mode",
          "string": {
            "description": "The mode that you would like to set for the terraform provider. May be set using environment variable `CDK_PROVIDER_MODE`. Can either be one of `console` or `gateway`",
            "optional_required": "required",
            "validators": [
              {
                "custom": {
                  "imports": [
                    {
                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                    },
                    {
                      "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                    }
                  ],
                  "schema_definition": "stringvalidator.OneOf(validation.ValidProviderMode...)"
                }
              }
            ]
          }
        },
        {
          "name": "base_url",
          "string": {
            "description": "The URL of either Conduktor Console or Gateway, depending on the `mode`. May be set using environment variable `CDK_CONSOLE_BASE_URL` or `CDK_BASE_URL` for Console, `CDK_GATEWAY_BASE_URL` or `CDK_BASE_URL` for Gateway. Required either here or in the environment.",
            "optional_required": "optional"
          }
        },
        {
          "name": "api_token",
          "string": {
            "description": "The API token to authenticate with the Conduktor Console API. May be set using environment variable `CDK_API_TOKEN` or `CDK_API_KEY`. If not provided, admin_user and admin_password will be used to authenticate. See [documentation](https://docs.conduktor.io/platform/reference/api-reference/#generate-an-api-key) for more information. Not used if `mode` is Gateway.",
            "optional_required": "optional",
            "sensitive": true
          }
        },
        {
          "name": "admin_user",
          "string": {
            "description": "The login credentials of the admin user. May be set using environment variable `CDK_CONSOLE_USER`, `CDK_ADMIN_EMAIL` or `CDK_ADMIN_USER` for Console, `CDK_GATEWAY_USER` or `CDK_ADMIN_USER` for Gateway. Required if admin_password is set. If not provided and `mode` is Console, the API token will be used to authenticate.",
            "optional_required": "optional"
          }
        },
        {
          "name": "admin_password",
          "string": {
            "description": "The password of the admin user. May be set using environment variable `CDK_CONSOLE_PASSWORD` or `CDK_ADMIN_PASSWORD` for Console, `CDK_GATEWAY_PASSWORD` or `CDK_ADMIN_PASSWORD` for Gateway. Required if admin_user is set. If not provided, the API token will be used to authenticater.",
            "optional_required": "optional",
            "sensitive": true
          }
        },
        {
          "name": "cacert",
          "string": {
            "description": "Root CA certificate in PEM format to verify the Conduktor certificate. May be set using environment variable `CDK_CONSOLE_CACERT` or `CDK_CACERT` for Console, `CDK_GATEWAY_CACERT` or `CDK_CACERT` for Gateway. If not provided, the system's root CA certificates will be used.",
            "optional_required": "optional"
          }
        },
        {
          "name": "insecure",
          "bool": {
            "description": "Skip TLS verification flag. May be set using environment variable `CDK_CONSOLE_INSECURE` or `CDK_INSECURE` for Console, `CDK_GATEWAY_INSECURE` or `CDK_INSECURE` for Gateway.",
            "optional_required": "optional"
          }
        },
        {
          "name": "cert",
          "string": {
            "description": "Cert in PEM format to authenticate using client certificates. May be set using environment variable `CDK_CONSOLE_CERT` or `CDK_CERT` for Console, `CDK_GATEWAY_CERT` or `CDK_CERT` for Gateway. Must be used with key. If key is provided, cert is required. Useful when Console is behind a reverse proxy with client certificate authentication.",
            "optional_required": "optional"
          }
        },
        {
          "name": "key",
          "string": {
            "description": "Key in PEM format to authenticate using client certificates. May be set using environment variable `CDK_CONSOLE_KEY` or `CDK_KEY` for Console, `CDK_GATEWAY_KEY` or `CDK_KEY` for Gateway. Must be used with cert. If cert is provided, key is required. Useful when Console is behind a reverse proxy with client certificate authentication.",
            "optional_required": "optional"
          }
        }
      ]
    }
  },
  "datasources": [],
  "resources": [
    {
      "name": "console_group_v2",
      "schema": {
        "attributes": [
          {
            "name": "name",
            "string": {
              "description": "Group name, must be unique, act as ID for import",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9a-z\\\\_\\\\-]+$\"), \"\")"
                  }
                }
              ]
            }
          }
        ],
        "blocks": [
          {
            "name": "spec",
            "single_nested": {
              "attributes": [
                {
                  "name": "display_name",
                  "string": {
                    "description": "Group display name",
                    "computed_optional_required": "required"
                  }
                },
                {
                  "name": "description",
                  "string": {
                    "description": "Group description",
                    "computed_optional_required": "optional"
                  }
                },
                {
                  "name": "external_groups",
                  "set": {
                    "description": "Set of external groups from SSO mapped to this group",
                    "computed_optional_required": "computed_optional",
                    "element_type": {
                      "string": {}
                    },
                    "default": {
                      "custom": {
                        "imports": [
                          {
                            "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/setdefault"
                          }
                        ],
                        "schema_definition": "setdefault.StaticValue(basetypes.NewSetValueMust(types.StringType, []attr.Value{}))"
                      }
                    }
                  }
                },
                {
                  "name": "members",
                  "set": {
                    "description": "Set of members of the group",
                    "computed_optional_required": "computed_optional",
                    "element_type": {
                      "string": {}
                    },
                    "default": {
                      "custom": {
                        "imports": [
                          {
                            "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/setdefault"
                          }
                        ],
                        "schema_definition": "setdefault.StaticValue(basetypes.NewSetValueMust(types.StringType, []attr.Value{}))"
                      }
                    },
                    "validators": []
                  }
                },
                {
                  "name": "members_from_external_groups",
                  "set": {
                    "description": "Set of members of the group",
                    "computed_optional_required": "computed",
                    "element_type": {
                      "string": {}
                    },
                    "default": {
                      "custom": {
                        "imports": [
                          {
                            "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/setdefault"
                          }
                        ],
                        "schema_definition": "setdefault.StaticValue(basetypes.NewSetValueMust(types.StringType, []attr.Value{}))"
                      }
                    },
                    "validators": []
                  }
                },
                {
                  "name": "permissions",
                  "set_nested": {
                    "description": "Set of all group permissions",
                    "computed_optional_required": "computed_optional",
                    "nested_object": {
                      "attributes": [
                        {
                          "name": "name",
                          "string": {
                            "description": "Name of the resource to apply permission could be a topic, a cluster, a consumer group, etc. depending on resource_type",
                            "computed_optional_required": "optional"
                          }
                        },
                        {
                          "name": "resource_type",
                          "string": {
                            "description": "Type of the resource to apply permission on valid values are: CLUSTER, CONSUMER_GROUP, KAFKA_CONNECT, KSQLDB, PLATFORM, SUBJECT, TOPIC",
                            "computed_optional_required": "required",
                            "validators": [
                              {
                                "custom": {
                                  "imports": [
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                    },
                                    {
                                      "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                    }
                                  ],
                                  "schema_definition": "stringvalidator.OneOf(validation.ValidPermissionTypes...)"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "name": "cluster",
                          "string": {
                            "description": "Name of the cluster to apply permission, only required if resource_type is TOPIC, SUBJECT, CONSUMER_GROUP, KAFKA_CONNECT, KSQLDB",
                            "computed_optional_required": "optional"
                          }
                        },
                        {
                          "name": "kafka_connect",
                          "string": {
                            "description": "Name of the Kafka Connect to apply permission, only required if resource_type is KAFKA_CONNECT",
                            "computed_optional_required": "optional"
                          }
                        },
                        {
                          "name": "pattern_type",
                          "string": {
                            "description": "Type of the pattern to apply permission on valid values are: LITERAL, PREFIXED",
                            "computed_optional_required": "optional",
                            "validators": [
                              {
                                "custom": {
                                  "imports": [
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                    },
                                    {
                                      "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                    }
                                  ],
                                  "schema_definition": "stringvalidator.OneOf(validation.ValidPermissionPatternTypes...)"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "name": "permissions",
                          "set": {
                            "description": "Set of all permissions to apply on the resource. See https://docs.conduktor.io/platform/reference/resource-reference/console/#permissions for more details",
                            "computed_optional_required": "required",
                            "element_type": {
                              "string": {}
                            },
                            "validators": [
                              {
                                "custom": {
                                  "imports": [
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/setvalidator"
                                    },
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                    },
                                    {
                                      "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                    }
                                  ],
                                  "schema_definition": "setvalidator.ValueStringsAre(stringvalidator.OneOf(validation.ValidPermissions ...))"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "console_kafka_cluster_v2",
      "schema": {
        "attributes": [
          {
            "name": "name",
            "string": {
              "description": "Kafka cluster name, must be unique, acts as an ID for import",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9a-z\\\\_\\\\-.]+$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "labels",
            "map": {
              "description": "Kafka cluster labels",
              "computed_optional_required": "computed_optional",
              "element_type": {
                "string": {}
              }
            }
          }
        ],
        "blocks": [
          {
            "name": "spec",
            "single_nested": {
              "attributes": [
                {
                  "name": "display_name",
                  "string": {
                    "description": "Kafka cluster display name",
                    "computed_optional_required": "required"
                  }
                },
                {
                  "name": "bootstrap_servers",
                  "string": {
                    "description": "List of bootstrap servers for the Kafka cluster separated by comma",
                    "computed_optional_required": "required"
                  }
                },
                {
                  "name": "properties",
                  "map": {
                    "description": "Kafka cluster properties",
                    "computed_optional_required": "optional",
                    "element_type": {
                      "string": {}
                    }
                  }
                },
                {
                  "name": "color",
                  "string": {
                    "description": "Kafka cluster icon color in hexadecimal format like `#FF0000`",
                    "computed_optional_required": "computed_optional"
                  }
                },
                {
                  "name": "icon",
                  "string": {
                    "description": "Kafka cluster icon. List of available icons can be found [here](https://docs.conduktor.io/platform/reference/resource-reference/console/#icon-sets)",
                    "computed_optional_required": "computed_optional"
                  }
                },
                {
                  "name": "ignore_untrusted_certificate",
                  "bool": {
                    "description": "Ignore untrusted certificate for Kafka cluster",
                    "computed_optional_required": "computed_optional",
                    "default": {
                      "custom": {
                        "imports": [
                          {
                            "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
                          }
                        ],
                        "schema_definition": "booldefault.StaticBool(false)"
                      }
                    }
                  }
                },
                {
                  "name": "schema_registry",
                  "single_nested": {
                    "description": "Schema registry configuration",
                    "computed_optional_required": "optional",
                    "attributes": [
                      {
                        "name": "type",
                        "string": {
                          "description": "Schema registry type valid values are: `ConfluentLike`, `Glue`\n\nMore detail on our [documentation](https://docs.conduktor.io/platform/reference/resource-reference/console/#schema-registry)",
                          "computed_optional_required": "required",
                          "validators": [
                            {
                              "custom": {
                                "imports": [
                                  {
                                    "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                  },
                                  {
                                    "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                  }
                                ],
                                "schema_definition": "stringvalidator.OneOf(validation.ValidSchemaRegistryTypes...)"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "url",
                        "string": {
                          "description": "Schema registry URL. Required if type is `ConfluentLike`",
                          "computed_optional_required": "optional"
                        }
                      },
                      {
                        "name": "properties",
                        "string": {
                          "description": "Schema registry properties. Only used if type is `ConfluentLike`",
                          "computed_optional_required": "optional"
                        }
                      },
                      {
                        "name": "ignore_untrusted_certificate",
                        "bool": {
                          "description": "Ignore untrusted certificate for schema registry. Only used if type is `ConfluentLike`",
                          "computed_optional_required": "computed_optional",
                          "default": {
                            "custom": {
                              "imports": [
                                {
                                  "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
                                }
                              ],
                              "schema_definition": "booldefault.StaticBool(false)"
                            }
                          }
                        }
                      },
                      {
                        "name": "security",
                        "single_nested": {
                          "description": "Schema registry configuration. Required if type is `ConfluentLike` or `Glue`",
                          "computed_optional_required": "required",
                          "attributes": [
                            {
                              "name": "type",
                              "string": {
                                "description": "Schema registry security type. Required if type is `ConfluentLike` or `Glue`.\n\nValid values are:\n\n- For **ConfluentLike** : `NoSecurity`, `BasicAuth`, `BearerToken`, `SSLAuth` \n\n- For **Glue** : `Credentials`, `FromContext`, `FromRole`, `IAMAnywhere`\n\n More detail on our [documentation](https://docs.conduktor.io/platform/reference/resource-reference/console/#schema-registry)",
                                "computed_optional_required": "required",
                                "validators": [
                                  {
                                    "custom": {
                                      "imports": [
                                        {
                                          "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                        },
                                        {
                                          "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                        }
                                      ],
                                      "schema_definition": "stringvalidator.OneOf(validation.ValidSchemaRegistrySecurityTypes...)"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "name": "username",
                              "string": {
                                "description": "Schema registry basic auth username. Required if security type is `BasicAuth`",
                                "computed_optional_required": "optional"
                              }
                            },
                            {
                              "name": "password",
                              "string": {
                                "description": "Schema registry basic auth password. Required if security type is `BasicAuth`",
                                "computed_optional_required": "optional",
                                "sensitive": true
                              }
                            },
                            {
                              "name": "token",
                              "string": {
                                "description": "Schema registry bearer token. Required if security type is `BearerToken`",
                                "computed_optional_required": "optional",
                                "sensitive": true
                              }
                            },
                            {
                              "name": "key",
                              "string": {
                                "description": "Schema registry SSL auth private key PEM. Required if security type is `SSLAuth`",
                                "computed_optional_required": "optional",
                                "sensitive": true
                              }
                            },
                            {
                              "name": "certificate_chain",
                              "string": {
                                "description": "Schema registry SSL auth certificate chain PEM. Required if security type is `SSLAuth`",
                                "computed_optional_required": "optional"
                              }
                            },
                            {
                              "name": "access_key_id",
                              "string": {
                                "description": "Glue Schema registry AWS access key ID. Required if type is Glue with security `Credentials`",
                                "computed_optional_required": "optional",
                                "sensitive": true
                              }
                            },
                            {
                              "name": "secret_key",
                              "string": {
                                "description": "Glue Schema registry AWS secret key. Required if type is Glue with security `Credentials`",
                                "computed_optional_required": "optional",
                                "sensitive": true
                              }
                            },
                            {
                              "name": "profile",
                              "string": {
                                "description": "Glue Schema registry AWS profile name. Required if type is Glue with security `FromContext`",
                                "computed_optional_required": "optional"
                              }
                            },
                            {
                              "name": "role",
                              "string": {
                                "description": "Glue Schema registry AWS role ARN. Required if type is Glue with security `FromRole`",
                                "computed_optional_required": "optional"
                              }
                            },
                            {
                              "name": "trust_anchor_arn",
                              "string": {
                                "description": "Glue Schema registry AWS trust anchor ARN. Required if type is Glue with security `IAMAnywhere`",
                                "computed_optional_required": "optional"
                              }
                            },
                            {
                              "name": "profile_arn",
                              "string": {
                                "description": "Glue Schema registry AWS profile ARN. Required if type is Glue with security `IAMAnywhere`",
                                "computed_optional_required": "optional"
                              }
                            },
                            {
                              "name": "role_arn",
                              "string": {
                                "description": "Glue Schema registry AWS role ARN. Required if type is Glue with security `IAMAnywhere`",
                                "computed_optional_required": "optional"
                              }
                            },
                            {
                              "name": "certificate",
                              "string": {
                                "description": "Glue Schema registry AWS certificate. Required if type is Glue with security `IAMAnywhere`",
                                "computed_optional_required": "optional"
                              }
                            },
                            {
                              "name": "private_key",
                              "string": {
                                "description": "Glue Schema registry AWS private key. Required if type is Glue with security `IAMAnywhere`",
                                "computed_optional_required": "optional"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "registry_name",
                        "string": {
                          "description": "Glue Schema registry name. Only used if type is `Glue`",
                          "computed_optional_required": "optional"
                        }
                      },
                      {
                        "name": "region",
                        "string": {
                          "description": "Glue Schema registry AWS region. Required if type is `Glue`",
                          "computed_optional_required": "optional"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "kafka_flavor",
                  "single_nested": {
                    "description": "Schema registry configuration",
                    "computed_optional_required": "optional",
                    "attributes": [
                      {
                        "name": "type",
                        "string": {
                          "description": "Kafka provider type : `Confluent`, `Aiven`, `Gateway`. More detail on our [documentation](https://docs.conduktor.io/platform/reference/resource-reference/console/#kafka-provider)",
                          "computed_optional_required": "required",
                          "validators": [
                            {
                              "custom": {
                                "imports": [
                                  {
                                    "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                  },
                                  {
                                    "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                  }
                                ],
                                "schema_definition": "stringvalidator.OneOf(validation.ValidKafkaFlavorTypes...)"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "key",
                        "string": {
                          "description": "Confluent API key. Required if type is `Confluent`",
                          "computed_optional_required": "optional",
                          "sensitive": true
                        }
                      },
                      {
                        "name": "secret",
                        "string": {
                          "description": "Confluent API secret. Required if type is `Confluent`",
                          "computed_optional_required": "optional",
                          "sensitive": true
                        }
                      },
                      {
                        "name": "confluent_environment_id",
                        "string": {
                          "description": "Confluent environment identifier. Required if type is `Confluent`",
                          "computed_optional_required": "optional"
                        }
                      },
                      {
                        "name": "confluent_cluster_id",
                        "string": {
                          "description": "Confluent cluster identifier. Required if type is `Confluent`",
                          "computed_optional_required": "optional"
                        }
                      },
                      {
                        "name": "api_token",
                        "string": {
                          "description": "Aiven API token. Required if type is `Aiven`",
                          "computed_optional_required": "optional",
                          "sensitive": true
                        }
                      },
                      {
                        "name": "project",
                        "string": {
                          "description": "Aiven project name. Required if type is `Aiven`",
                          "computed_optional_required": "optional"
                        }
                      },
                      {
                        "name": "service_name",
                        "string": {
                          "description": "Aiven service name. Required if type is `Aiven`",
                          "computed_optional_required": "optional"
                        }
                      },
                      {
                        "name": "url",
                        "string": {
                          "description": "Conduktor Gateway Admin API URL. Required if type is `Gateway`",
                          "computed_optional_required": "optional"
                        }
                      },
                      {
                        "name": "user",
                        "string": {
                          "description": "Conduktor Gateway Admin user. Required if type is `Gateway`",
                          "computed_optional_required": "optional"
                        }
                      },
                      {
                        "name": "password",
                        "string": {
                          "description": "Conduktor Gateway Admin password. Required if type is `Gateway`",
                          "computed_optional_required": "optional",
                          "sensitive": true
                        }
                      },
                      {
                        "name": "virtual_cluster",
                        "string": {
                          "description": "Conduktor Gateway Virtual cluster name (default `passthrough`). Only used if type is `Gateway`",
                          "computed_optional_required": "computed_optional",
                          "default": {
                            "custom": {
                              "imports": [
                                {
                                  "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringdefault"
                                }
                              ],
                              "schema_definition": "stringdefault.StaticString(\"passthrough\")"
                            }
                          },
                          "validators": [
                            {
                              "custom": {
                                "imports": [
                                  {
                                    "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                  }
                                ],
                                "schema_definition": "validation.NonEmptyString()"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "ignore_untrusted_certificate",
                        "bool": {
                          "description": "Ignore untrusted certificate for Gateway Admin API. Only used if type is `Gateway`",
                          "computed_optional_required": "computed_optional",
                          "default": {
                            "custom": {
                              "imports": [
                                {
                                  "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
                                }
                              ],
                              "schema_definition": "booldefault.StaticBool(false)"
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "console_kafka_connect_v2",
      "schema": {
        "attributes": [
          {
            "name": "name",
            "string": {
              "description": "Kafka connect server name, must be unique, act as ID for import",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9a-z\\\\_\\\\-.]+$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "cluster",
            "string": {
              "description": "Kafka cluster name linked with Kafka current connect server. Must exist in Conduktor Console",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9a-z\\\\_\\\\-.]+$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "labels",
            "map": {
              "description": "Kafka connect server labels",
              "computed_optional_required": "computed_optional",
              "element_type": {
                "string": {}
              }
            }
          }
        ],
        "blocks": [
          {
            "name": "spec",
            "single_nested": {
              "attributes": [
                {
                  "name": "display_name",
                  "string": {
                    "description": "Kafka connect server display name",
                    "computed_optional_required": "required"
                  }
                },
                {
                  "name": "urls",
                  "string": {
                    "description": "URL of a Kafka Connect cluster. **Multiple URLs are not supported for now**",
                    "computed_optional_required": "required"
                  }
                },
                {
                  "name": "headers",
                  "map": {
                    "description": "Key-Value HTTP headers to add to requests",
                    "computed_optional_required": "optional",
                    "element_type": {
                      "string": {}
                    }
                  }
                },
                {
                  "name": "ignore_untrusted_certificate",
                  "bool": {
                    "description": "Ignore untrusted certificate for Kafka connect server requests",
                    "computed_optional_required": "computed_optional",
                    "default": {
                      "custom": {
                        "imports": [
                          {
                            "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
                          }
                        ],
                        "schema_definition": "booldefault.StaticBool(false)"
                      }
                    }
                  }
                },
                {
                  "name": "security",
                  "single_nested": {
                    "description": "Kafka connect server security configuration. One of `BasicAuth`, `BearerToken`, `SSLAuth`",
                    "computed_optional_required": "optional",
                    "attributes": [
                      {
                        "name": "type",
                        "string": {
                          "description": "Kafka connect server security type. Either `BasicAuth`, `BearerToken`, `SSLAuth`\n\n More detail on our [documentation](https://docs.conduktor.io/platform/reference/resource-reference/console/#kafkaconnectcluster)",
                          "computed_optional_required": "required",
                          "validators": [
                            {
                              "custom": {
                                "imports": [
                                  {
                                    "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                  },
                                  {
                                    "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                  }
                                ],
                                "schema_definition": "stringvalidator.OneOf(validation.ValidKafkaConnectSecurityTypes...)"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "username",
                        "string": {
                          "description": "Kafka connect server basic auth username. Required if security type is `BasicAuth`",
                          "computed_optional_required": "optional"
                        }
                      },
                      {
                        "name": "password",
                        "string": {
                          "description": "Kafka connect server basic auth password. Required if security type is `BasicAuth`",
                          "computed_optional_required": "optional",
                          "sensitive": true
                        }
                      },
                      {
                        "name": "token",
                        "string": {
                          "description": "Kafka connect server bearer token. Required if security type is `BearerToken`",
                          "computed_optional_required": "optional",
                          "sensitive": true
                        }
                      },
                      {
                        "name": "key",
                        "string": {
                          "description": "Kafka connect server mTLS auth private key PEM. Required if security type is `SSLAuth`",
                          "computed_optional_required": "optional",
                          "sensitive": true
                        }
                      },
                      {
                        "name": "certificate_chain",
                        "string": {
                          "description": "Kafka connect server mTLS auth certificate chain PEM. Required if security type is `SSLAuth`",
                          "computed_optional_required": "optional"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "console_user_v2",
      "schema": {
        "attributes": [
          {
            "name": "name",
            "string": {
              "description": "User email, must be unique, act as ID for import",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^([\\\\w\\\\-_.]*[^.])@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$\"), \"\")"
                  }
                }
              ]
            }
          }
        ],
        "blocks": [
          {
            "name": "spec",
            "single_nested": {
              "attributes": [
                {
                  "name": "firstname",
                  "string": {
                    "description": "User firstname",
                    "computed_optional_required": "optional"
                  }
                },
                {
                  "name": "lastname",
                  "string": {
                    "description": "User lastname",
                    "computed_optional_required": "optional"
                  }
                },
                {
                  "name": "permissions",
                  "set_nested": {
                    "description": "Set of all user permissions",
                    "computed_optional_required": "computed_optional",
                    "nested_object": {
                      "attributes": [
                        {
                          "name": "name",
                          "string": {
                            "description": "Name of the resource to apply permission could be a topic, a cluster, a consumer group, etc. depending on resource_type",
                            "computed_optional_required": "optional"
                          }
                        },
                        {
                          "name": "resource_type",
                          "string": {
                            "description": "Type of the resource to apply permission on valid values are: CLUSTER, CONSUMER_GROUP, KAFKA_CONNECT, KSQLDB, PLATFORM, SUBJECT, TOPIC",
                            "computed_optional_required": "required",
                            "validators": [
                              {
                                "custom": {
                                  "imports": [
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                    },
                                    {
                                      "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                    }
                                  ],
                                  "schema_definition": "stringvalidator.OneOf(validation.ValidPermissionTypes...)"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "name": "cluster",
                          "string": {
                            "description": "Name of the cluster to apply permission, only required if resource_type is TOPIC, SUBJECT, CONSUMER_GROUP, KAFKA_CONNECT, KSQLDB",
                            "computed_optional_required": "optional"
                          }
                        },
                        {
                          "name": "kafka_connect",
                          "string": {
                            "description": "Name of the Kafka Connect to apply permission, only required if resource_type is KAFKA_CONNECT",
                            "computed_optional_required": "optional"
                          }
                        },
                        {
                          "name": "pattern_type",
                          "string": {
                            "description": "Type of the pattern to apply permission on valid values are: LITERAL, PREFIXED",
                            "computed_optional_required": "optional",
                            "validators": [
                              {
                                "custom": {
                                  "imports": [
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                    },
                                    {
                                      "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                    }
                                  ],
                                  "schema_definition": "stringvalidator.OneOf(validation.ValidPermissionPatternTypes...)"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "name": "permissions",
                          "set": {
                            "description": "Set of all permissions to apply on the resource. See https://docs.conduktor.io/platform/reference/resource-reference/console/#permissions for more details",
                            "computed_optional_required": "required",
                            "element_type": {
                              "string": {}
                            },
                            "validators": [
                              {
                                "custom": {
                                  "imports": [
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/setvalidator"
                                    },
                                    {
                                      "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                    },
                                    {
                                      "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                    }
                                  ],
                                  "schema_definition": "setvalidator.ValueStringsAre(stringvalidator.OneOf(validation.ValidPermissions ...))"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "gateway_interceptor_encryption_v2",
      "schema": {
        "attributes": [
          {
            "name": "name",
            "string": {
              "description": "The name of the interceptor, must be unique, act as ID for import",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-zA-Z0-9_-]{3,64}$\"), \"\")"
                  }
                }
              ]
            }
          }
        ],
        "blocks": [
          {
            "name": "scope",
            "single_nested": {
              "attributes": [
                {
                  "name": "vcluster",
                  "string": {
                    "description": "The name of the virtual cluster the interceptor will be applied to. Optional parameter to help defining the scope",
                    "computed_optional_required": "optional",
                    "validators": [
                      {
                        "custom": {
                          "imports": [
                            {
                              "path": "regexp"
                            },
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                            }
                          ],
                          "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-zA-Z0-9_-]+$\"), \"\")"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "group",
                  "string": {
                    "description": "The name of the group the interceptor will be applied to. Optional parameter to helps defining the scope",
                    "computed_optional_required": "optional",
                    "validators": [
                      {
                        "custom": {
                          "imports": [
                            {
                              "path": "regexp"
                            },
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                            }
                          ],
                          "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-zA-Z0-9_-]+$\"), \"\")"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "username",
                  "string": {
                    "description": "The username the interceptor will be applied to. Optional parameter to helps defining the scope",
                    "computed_optional_required": "optional",
                    "validators": [
                      {
                        "custom": {
                          "imports": [
                            {
                              "path": "regexp"
                            },
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                            }
                          ],
                          "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-zA-Z0-9_-]+$\"), \"\")"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "name": "spec",
            "single_nested": {
              "attributes": [
                {
                  "name": "comment",
                  "string": {
                    "description": "An optional comment for the interceptor.",
                    "computed_optional_required": "optional"
                  }
                },
                {
                  "name": "plugin_class",
                  "string": {
                    "description": "The class of the plugin",
                    "computed_optional_required": "optional"
                  }
                },
                {
                  "name": "priority",
                  "int64": {
                    "description": "The priority of the interceptor. Must be bigger than 0",
                    "computed_optional_required": "optional",
                    "validators": [
                      {
                        "custom": {
                          "imports": [
                            {
                              "path": "regexp"
                            },
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                            }
                          ],
                          "schema_definition": "int64validator.Between(1,2147483647)"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "config",
                  "single_nested": {
                    "computed_optional_required": "optional",
                    "attributes": [
                      {
                        "name": "topic",
                        "string": {
                          "description": "Topics that match this regex will have the interceptor applied. Defaults to all.",
                          "computed_optional_required": "computed_optional",
                          "default": {
                            "custom": {
                              "imports": [
                                {
                                  "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringdefault"
                                }
                              ],
                              "schema_definition": "stringdefault.StaticString(\".*\")"
                            }
                          }
                        }
                      },
                      {
                        "name": "external_storage",
                        "bool": {
                          "description": "Flag to store encryption settings externally in a topic.",
                          "computed_optional_required": "optional"
                        }
                      },
                      {
                        "name": "record_value",
                        "single_nested": {
                          "description": "Configuration for encrypting the record value, you can either configure to encrypt the whole payload, or per field level.",
                          "computed_optional_required": "optional",
                          "attributes": [
                            {
                              "name": "type",
                              "string": {
                                "description": "URL of the schema registry.",
                                "computed_optional_required": "computed_optional"
                              }
                            },
                            {
                              "name": "key_secret_id",
                              "string": {
                                "description": "The unique identifier for the encryption key. This key can be stored in an external Key Management System (KMS) or in memory.",
                                "computed_optional_required": "required"
                              }
                            },
                            {
                              "name": "algorithm",
                              "string": {
                                "description": "The encryption algorithm used for encrypting data. Defaults to AES128_GCM if not specified.",
                                "computed_optional_required": "optional",
                                "validators": [
                                  {
                                    "custom": {
                                      "imports": [
                                        {
                                          "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                        },
                                        {
                                          "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                        }
                                      ],
                                      "schema_definition": "stringvalidator.OneOf(validation.ValidInterceptorEncryptionAlgorithm...)"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "name": "fields",
                              "set_nested": {
                                "description": "Set of all the fields config entry",
                                "computed_optional_required": "computed_optional",
                                "nested_object": {
                                  "attributes": [
                                    {
                                      "name": "field_name",
                                      "string": {
                                        "description": "The name of the field to be encrypted. It can be a nested structure using dot notation like 'education.account.username'.",
                                        "computed_optional_required": "required"
                                      }
                                    },
                                    {
                                      "name": "key_secret_id",
                                      "string": {
                                        "description": "The unique identifier for the encryption key. This key can be stored in an external Key Management System (KMS) or in memory.",
                                        "computed_optional_required": "required"
                                      }
                                    },
                                    {
                                      "name": "algorithm",
                                      "string": {
                                        "description": "The encryption algorithm used for encrypting data. Defaults to AES128_GCM if not specified.",
                                        "computed_optional_required": "required",
                                        "validators": [
                                          {
                                            "custom": {
                                              "imports": [
                                                {
                                                  "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                },
                                                {
                                                  "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                                }
                                              ],
                                              "schema_definition": "stringvalidator.OneOf(validation.ValidInterceptorEncryptionAlgorithm...)"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "record_key",
                        "single_nested": {
                          "description": "Configuration for encrypting the record key, you can either configure to encrypt the whole payload, or per field level.",
                          "computed_optional_required": "optional",
                          "attributes": [
                            {
                              "name": "type",
                              "string": {
                                "description": "URL of the schema registry.",
                                "computed_optional_required": "computed_optional"
                              }
                            },
                            {
                              "name": "key_secret_id",
                              "string": {
                                "description": "The unique identifier for the encryption key. This key can be stored in an external Key Management System (KMS) or in memory.",
                                "computed_optional_required": "required"
                              }
                            },
                            {
                              "name": "algorithm",
                              "string": {
                                "description": "The encryption algorithm used for encrypting data. Defaults to AES128_GCM if not specified.",
                                "computed_optional_required": "optional",
                                "validators": [
                                  {
                                    "custom": {
                                      "imports": [
                                        {
                                          "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                        },
                                        {
                                          "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                        }
                                      ],
                                      "schema_definition": "stringvalidator.OneOf(validation.ValidInterceptorEncryptionAlgorithm...)"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "name": "fields",
                              "set_nested": {
                                "description": "Set of all the fields config entry",
                                "computed_optional_required": "computed_optional",
                                "nested_object": {
                                  "attributes": [
                                    {
                                      "name": "field_name",
                                      "string": {
                                        "description": "The name of the field to be encrypted. It can be a nested structure using dot notation like 'education.account.username'.",
                                        "computed_optional_required": "required"
                                      }
                                    },
                                    {
                                      "name": "key_secret_id",
                                      "string": {
                                        "description": "The unique identifier for the encryption key. This key can be stored in an external Key Management System (KMS) or in memory.",
                                        "computed_optional_required": "required"
                                      }
                                    },
                                    {
                                      "name": "algorithm",
                                      "string": {
                                        "description": "The encryption algorithm used for encrypting data. Defaults to AES128_GCM if not specified.",
                                        "computed_optional_required": "required",
                                        "validators": [
                                          {
                                            "custom": {
                                              "imports": [
                                                {
                                                  "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                },
                                                {
                                                  "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                                }
                                              ],
                                              "schema_definition": "stringvalidator.OneOf(validation.ValidInterceptorEncryptionAlgorithm...)"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "record_header",
                        "single_nested": {
                          "description": "Configuration for encrypting the record headers.",
                          "computed_optional_required": "optional",
                          "attributes": [
                            {
                              "name": "header",
                              "string": {
                                "description": "Pattern to match headers that need encryption",
                                "computed_optional_required": "optional"
                              }
                            },
                            {
                              "name": "config",
                              "single_nested": {
                                "description": "The encryption configuration for the matching headers",
                                "computed_optional_required": "optional",
                                "attributes": [
                                  {
                                    "name": "type",
                                    "string": {
                                      "description": "URL of the schema registry.",
                                      "computed_optional_required": "computed_optional"
                                    }
                                  },
                                  {
                                    "name": "key_secret_id",
                                    "string": {
                                      "description": "The unique identifier for the encryption key. This key can be stored in an external Key Management System (KMS) or in memory.",
                                      "computed_optional_required": "required"
                                    }
                                  },
                                  {
                                    "name": "algorithm",
                                    "string": {
                                      "description": "The encryption algorithm used for encrypting data. Defaults to AES128_GCM if not specified.",
                                      "computed_optional_required": "optional",
                                      "validators": [
                                        {
                                          "custom": {
                                            "imports": [
                                              {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                              },
                                              {
                                                "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                              }
                                            ],
                                            "schema_definition": "stringvalidator.OneOf(validation.ValidInterceptorEncryptionAlgorithm...)"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "name": "fields",
                                    "set_nested": {
                                      "description": "Set of all the fields config entry",
                                      "computed_optional_required": "computed_optional",
                                      "nested_object": {
                                        "attributes": [
                                          {
                                            "name": "field_name",
                                            "string": {
                                              "description": "The name of the field to be encrypted. It can be a nested structure using dot notation like 'education.account.username'.",
                                              "computed_optional_required": "required"
                                            }
                                          },
                                          {
                                            "name": "key_secret_id",
                                            "string": {
                                              "description": "The unique identifier for the encryption key. This key can be stored in an external Key Management System (KMS) or in memory.",
                                              "computed_optional_required": "required"
                                            }
                                          },
                                          {
                                            "name": "algorithm",
                                            "string": {
                                              "description": "The encryption algorithm used for encrypting data. Defaults to AES128_GCM if not specified.",
                                              "computed_optional_required": "required",
                                              "validators": [
                                                {
                                                  "custom": {
                                                    "imports": [
                                                      {
                                                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                                      },
                                                      {
                                                        "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                                      }
                                                    ],
                                                    "schema_definition": "stringvalidator.OneOf(validation.ValidInterceptorEncryptionAlgorithm...)"
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "kms_config",
                        "single_nested": {
                          "description": "Configuration for using external Key Management Systems (KMS).",
                          "computed_optional_required": "optional",
                          "attributes": [
                            {
                              "name": "key_ttl_ms",
                              "int64": {
                                "description": "The time-to-live for encryption keys in milliseconds. Set to 0 to disable caching.",
                                "computed_optional_required": "computed_optional",
                                "default": {
                                  "custom": {
                                    "imports": [
                                      {
                                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/int64default"
                                      }
                                    ],
                                    "schema_definition": "int64default.StaticInt64(3600000)"
                                  }
                                }
                              }
                            },
                            {
                              "name": "vault",
                              "single_nested": {
                                "description": "Configuration for using HashiCorp Vault as a Key Management System.",
                                "computed_optional_required": "optional",
                                "attributes": [
                                  {
                                    "name": "type",
                                    "string": {
                                      "description": "Type of the authentication for hashicorp vault, valid values are: APP_ROLE, LDAP, AWS_EC2_PKCS7, GCP, GITHUB, JWT, AWS_IAM, AWS_EC2, TOKEN, KUBERNETES, USERNAME_PASSWORD",
                                      "computed_optional_required": "required",
                                      "validators": [
                                        {
                                          "custom": {
                                            "imports": [
                                              {
                                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                                              },
                                              {
                                                "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                                              }
                                            ],
                                            "schema_definition": "stringvalidator.OneOf(validation.ValidInterceptorEncryptionVaultTypes...)"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "name": "role_id",
                                    "string": {
                                      "description": "AppRole Role ID for Vault authentication.",
                                      "computed_optional_required": "optional"
                                    }
                                  },
                                  {
                                    "name": "secret_id",
                                    "string": {
                                      "description": "AppRole Secret ID for Vault authentication.",
                                      "computed_optional_required": "optional",
                                      "sensitive": true
                                    }
                                  },
                                  {
                                    "name": "path",
                                    "string": {
                                      "description": "Custom path for AppRole authentication.",
                                      "computed_optional_required": "optional"
                                    }
                                  },
                                  {
                                    "name": "username",
                                    "string": {
                                      "description": "Username for LDAP Vault authentication.",
                                      "computed_optional_required": "optional"
                                    }
                                  },
                                  {
                                    "name": "password",
                                    "string": {
                                      "description": "Password for LDAP Vault authentication.",
                                      "computed_optional_required": "optional",
                                      "sensitive": true
                                    }
                                  },
                                  {
                                    "name": "ldap_auth_mount",
                                    "string": {
                                      "description": "Custom authentication mount point for LDAP authentication.",
                                      "computed_optional_required": "optional"
                                    }
                                  },
                                  {
                                    "name": "role",
                                    "string": {
                                      "description": "Role for AWS, GCP and JWT Vault authentication.",
                                      "computed_optional_required": "optional"
                                    }
                                  },
                                  {
                                    "name": "pkcs7",
                                    "string": {
                                      "description": "PKCS7 signature for AWS EC2 authentication.",
                                      "computed_optional_required": "optional",
                                      "sensitive": true
                                    }
                                  },
                                  {
                                    "name": "nonce",
                                    "string": {
                                      "description": "nonce for aws ec2 authentication.",
                                      "computed_optional_required": "optional"
                                    }
                                  },
                                  {
                                    "name": "aws_auth_mount",
                                    "string": {
                                      "description": "Custom authentication mount point for AWS EC2.",
                                      "computed_optional_required": "optional"
                                    }
                                  },
                                  {
                                    "name": "jwt",
                                    "string": {
                                      "description": "JWT token for GCP and JWT authentication.",
                                      "computed_optional_required": "optional",
                                      "sensitive": true
                                    }
                                  },
                                  {
                                    "name": "token",
                                    "string": {
                                      "description": "GitHub personal access token for Vault authentication.",
                                      "computed_optional_required": "optional",
                                      "sensitive": true
                                    }
                                  },
                                  {
                                    "name": "github_auth_mount",
                                    "string": {
                                      "description": "Custom authentication mount point for GitHub authentication.",
                                      "computed_optional_required": "optional"
                                    }
                                  },
                                  {
                                    "name": "provider",
                                    "string": {
                                      "description": "JWT provider for Vault authentication.",
                                      "computed_optional_required": "optional"
                                    }
                                  },
                                  {
                                    "name": "iam_request_url",
                                    "string": {
                                      "description": "AWS IAM request URL for authentication.",
                                      "computed_optional_required": "optional"
                                    }
                                  },
                                  {
                                    "name": "iam_request_body",
                                    "string": {
                                      "description": "AWS IAM request body for authentication.",
                                      "computed_optional_required": "optional"
                                    }
                                  },
                                  {
                                    "name": "iam_request_headers",
                                    "string": {
                                      "description": "AWS IAM request headers for authentication.",
                                      "computed_optional_required": "optional"
                                    }
                                  },
                                  {
                                    "name": "identity",
                                    "string": {
                                      "description": "AWS EC2 identity document for authentication.",
                                      "computed_optional_required": "optional"
                                    }
                                  },
                                  {
                                    "name": "signature",
                                    "string": {
                                      "description": "AWS EC2 identity signature for authentication.",
                                      "computed_optional_required": "optional"
                                    }
                                  },
                                  {
                                    "name": "userpass_auth_mount",
                                    "string": {
                                      "description": "Custom authentication mount point for username/password authentication.",
                                      "computed_optional_required": "optional"
                                    }
                                  },
                                  {
                                    "name": "uri",
                                    "string": {
                                      "description": "The URI of the Vault server.",
                                      "computed_optional_required": "optional"
                                    }
                                  },
                                  {
                                    "name": "version",
                                    "int64": {
                                      "description": "The version of the Vault engine.",
                                      "computed_optional_required": "optional"
                                    }
                                  },
                                  {
                                    "name": "namespace",
                                    "string": {
                                      "description": "Namespace for Vault",
                                      "computed_optional_required": "optional"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "name": "azure",
                              "single_nested": {
                                "description": "Configuration for using Azure Key Vault as a Key Management System.",
                                "computed_optional_required": "optional",
                                "attributes": [
                                  {
                                    "name": "retry_policy",
                                    "single_nested": {
                                      "description": "Azure retry policy for failed key management operations",
                                      "computed_optional_required": "optional",
                                      "attributes": [
                                        {
                                          "name": "max_retries",
                                          "int64": {
                                            "description": "Maximum number of retry attempts for failed operations",
                                            "computed_optional_required": "computed_optional",
                                            "default": {
                                              "custom": {
                                                "imports": [
                                                  {
                                                    "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/int64default"
                                                  }
                                                ],
                                                "schema_definition": "int64default.StaticInt64(5)"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "name": "delay_ms",
                                          "int64": {
                                            "description": "Initial delay between retries in milliseconds",
                                            "computed_optional_required": "computed_optional",
                                            "default": {
                                              "custom": {
                                                "imports": [
                                                  {
                                                    "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/int64default"
                                                  }
                                                ],
                                                "schema_definition": "int64default.StaticInt64(1000)"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "name": "max_delay_ms",
                                          "int64": {
                                            "description": "Maximum delay between retries in milliseconds",
                                            "computed_optional_required": "computed_optional",
                                            "default": {
                                              "custom": {
                                                "imports": [
                                                  {
                                                    "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/int64default"
                                                  }
                                                ],
                                                "schema_definition": "int64default.StaticInt64(10000)"
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "name": "token_credential",
                                    "single_nested": {
                                      "description": "Azure token-based authentication credentials",
                                      "computed_optional_required": "optional",
                                      "attributes": [
                                        {
                                          "name": "client_id",
                                          "string": {
                                            "description": "Azure Client ID for authentication",
                                            "computed_optional_required": "required"
                                          }
                                        },
                                        {
                                          "name": "tenant_id",
                                          "string": {
                                            "description": "Azure Tenant ID for authentication",
                                            "computed_optional_required": "required"
                                          }
                                        },
                                        {
                                          "name": "client_secret",
                                          "string": {
                                            "description": "Azure Client Secret for authentication",
                                            "computed_optional_required": "required",
                                            "sensitive": true
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "name": "username_password_credential",
                                    "single_nested": {
                                      "description": "Azure username/password-based authentication credentials",
                                      "computed_optional_required": "optional",
                                      "attributes": [
                                        {
                                          "name": "client_id",
                                          "string": {
                                            "description": "Azure Client ID for authenticationg",
                                            "computed_optional_required": "required"
                                          }
                                        },
                                        {
                                          "name": "tenant_id",
                                          "string": {
                                            "description": "Azure Tenant ID for authentication",
                                            "computed_optional_required": "required"
                                          }
                                        },
                                        {
                                          "name": "username",
                                          "string": {
                                            "description": "Azure username for authentication",
                                            "computed_optional_required": "required"
                                          }
                                        },
                                        {
                                          "name": "password",
                                          "string": {
                                            "description": "Azure password for authentication",
                                            "computed_optional_required": "required",
                                            "sensitive": true
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "name": "aws",
                              "single_nested": {
                                "description": "Configuration for using AWS Key Management System.",
                                "computed_optional_required": "optional",
                                "attributes": [
                                  {
                                    "name": "basic_credentials",
                                    "single_nested": {
                                      "description": "AWS basic access credentials",
                                      "computed_optional_required": "optional",
                                      "attributes": [
                                        {
                                          "name": "access_key",
                                          "string": {
                                            "description": "The AWS access key",
                                            "computed_optional_required": "required",
                                            "sensitive": true
                                          }
                                        },
                                        {
                                          "name": "secret_key",
                                          "string": {
                                            "description": "The AWS secret key",
                                            "computed_optional_required": "required",
                                            "sensitive": true
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "name": "session_credentials",
                                    "single_nested": {
                                      "description": "AWS session-based credentials",
                                      "computed_optional_required": "optional",
                                      "attributes": [
                                        {
                                          "name": "access_key",
                                          "string": {
                                            "description": "The AWS access key for the session",
                                            "computed_optional_required": "optional",
                                            "sensitive": true
                                          }
                                        },
                                        {
                                          "name": "secret_key",
                                          "string": {
                                            "description": "The AWS secret key for the session",
                                            "computed_optional_required": "optional",
                                            "sensitive": true
                                          }
                                        },
                                        {
                                          "name": "session_token",
                                          "string": {
                                            "description": "The AWS session token",
                                            "computed_optional_required": "optional",
                                            "sensitive": true
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "name": "gcp",
                              "single_nested": {
                                "description": "Configuration for using Google Cloud Platform Key Management System.",
                                "computed_optional_required": "optional",
                                "attributes": [
                                  {
                                    "name": "service_account_credentials_file_path",
                                    "string": {
                                      "description": "File path to the GCP service account credentials JSON file.",
                                      "computed_optional_required": "optional"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "schema_registry_config",
                        "single_nested": {
                          "description": "Configuration for Schema Registry to handle Avro, JSON, and Protobuf records.",
                          "computed_optional_required": "optional",
                          "attributes": [
                            {
                              "name": "host",
                              "string": {
                                "description": "URL of the schema registry.",
                                "computed_optional_required": "required"
                              }
                            },
                            {
                              "name": "cache_size",
                              "int64": {
                                "description": "This interceptor caches schemas locally so that it doesn't have to query the schema registry.",
                                "computed_optional_required": "computed_optional",
                                "default": {
                                  "custom": {
                                    "imports": [
                                      {
                                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/int64default"
                                      }
                                    ],
                                    "schema_definition": "int64default.StaticInt64(100)"
                                  }
                                }
                              }
                            },
                            {
                              "name": "additional_configs",
                              "map": {
                                "description": "Additional properties mapped to specific security-related parameters. For enhanced security, use environment variable templates like ${MY_ENV_VAR}.",
                                "computed_optional_required": "optional",
                                "element_type": {
                                  "string": {}
                                }
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "schema_data_mode",
                        "string": {
                          "description": "Defines whether to preserve Avro schema format or convert to JSON.",
                          "computed_optional_required": "computed_optional",
                          "default": {
                            "custom": {
                              "imports": [
                                {
                                  "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringdefault"
                                }
                              ],
                              "schema_definition": "stringdefault.StaticString(\"preserve_avro\")"
                            }
                          }
                        }
                      },
                      {
                        "name": "enable_audit_log_on_error",
                        "bool": {
                          "description": "Flag to enable audit log when error happens.",
                          "computed_optional_required": "optional"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "gateway_service_account_v2",
      "schema": {
        "attributes": [
          {
            "name": "name",
            "string": {
              "description": "The name of the service account, must be unique, act as ID for import",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-zA-Z0-9_-]{3,64}$\"), \"\")"
                  }
                }
              ]
            }
          },
          {
            "name": "vcluster",
            "string": {
              "description": "The name of the virtual cluster the service account belongs to. If not provided, the service account will be created in the default passthrough virtual cluster.",
              "computed_optional_required": "computed_optional",
              "default": {
                "custom": {
                  "imports": [
                    {
                      "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringdefault"
                    }
                  ],
                  "schema_definition": "stringdefault.StaticString(\"passthrough\")"
                }
              },
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ],
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "regexp"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[a-zA-Z0-9_-]+$\"), \"\")"
                  }
                }
              ]
            }
          }
        ],
        "blocks": [
          {
            "name": "spec",
            "single_nested": {
              "attributes": [
                {
                  "name": "type",
                  "string": {
                    "description": "The type of the Service Account. Can only be either LOCAL or EXTERNAL.",
                    "computed_optional_required": "required",
                    "validators": [
                      {
                        "custom": {
                          "imports": [
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                            },
                            {
                              "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                            }
                          ],
                          "schema_definition": "stringvalidator.OneOf(validation.ValidServiceAccountTypes...)"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "external_names",
                  "set": {
                    "description": "Set of the external names of the service account. Required if spec.type is set to EXTERNAL. An external service account should have exactly one external name.",
                    "computed_optional_required": "computed_optional",
                    "element_type": {
                      "string": {}
                    },
                    "default": {
                      "custom": {
                        "imports": [
                          {
                            "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/setdefault"
                          }
                        ],
                        "schema_definition": "setdefault.StaticValue(basetypes.NewSetValueMust(types.StringType, []attr.Value{}))"
                      }
                    },
                    "validators": [
                      {
                        "custom": {
                          "imports": [
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework-validators/setvalidator"
                            },
                            {
                              "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                            },
                            {
                              "path": "github.com/conduktor/terraform-provider-conduktor/internal/schema/validation"
                            }
                          ],
                          "schema_definition": "setvalidator.SizeAtMost(1)"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "generic",
      "schema": {
        "attributes": [
          {
            "name": "kind",
            "string": {
              "description": "resource kind",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ]
            }
          },
          {
            "name": "version",
            "string": {
              "description": "resource version",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ]
            }
          },
          {
            "name": "name",
            "string": {
              "description": "resource name",
              "computed_optional_required": "required",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ]
            }
          },
          {
            "name": "cluster",
            "string": {
              "description": "resource parent cluster (if any)",
              "computed_optional_required": "optional",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.RequiresReplace()"
                  }
                }
              ]
            }
          },
          {
            "name": "manifest",
            "string": {
              "description": "resource manifest in yaml format. See [reference documentation](https://docs.conduktor.io/platform/reference/resource-reference/console/#manifests) for more details",
              "computed_optional_required": "required"
            }
          }
        ]
      }
    }
  ],
  "version": "0.1"
}
